name: 'Caliper-load-tests'

on:
  push

defaults:
  run:
    working-directory: carbynestack/deployments

concurrency:
  group: "Caliper"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  Caliper-load-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: juliangrewe-bosch/carbynestack
          token: ${{secrets.CALIPER_PRIVATE_REPOS_PAT}}
          path: carbynestack
          ref: cdktf-caliper

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - run: npm install --global cdktf-cli@0.16.3

      - name: Provision Azure Virtual Machine
        run: |
          npm install
          cdktf get
          cdktf synth
          terraform -chdir=cdktf.out/stacks/private-aks/ init -input=false
          terraform -chdir=cdktf.out/stacks/private-aks/ apply -auto-approve -input=false
        env:
          TF_VAR_adminPassword: ${{secrets.ADMIN_PASSWORD}}
          ARM_CLIENT_ID: ${{secrets.AZURE_SUBSCRIPTION_USERNAME}}
          ARM_CLIENT_SECRET: ${{secrets.AZURE_SUBSCRIPTION_PASSWORD}}
          ARM_TENANT_ID: ${{secrets.AZURE_SUBSCRIPTION_TENANT}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: Deploy a Carbynestack Virtual Cloud
        run: |
          # Update package repositories and install necessary tools
          sudo apt-get update > /dev/null
          sudo apt-get install sshpass -y

          # SSH into the remote server using sshpass and execute commands
          sshpass -p ${{secrets.ADMIN_PASSWORD}} ssh -o "StrictHostKeyChecking no" caliper@$(terraform -chdir=cdktf.out/stacks/private-aks/ output -raw caliper-vm-public-ip) << EOF

          # Set up access to Carbynestacks Github Packages
          mkdir -p ~/.m2
          echo -e "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" \
          "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.2.0\"\n" \
          "          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n" \
          "          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd\">\n" \
          "  <servers>\n" \
          "    <server>\n" \
          "      <id>github</id>\n" \
          "      <username>juliangrewe-bosch</username>\n" \
          "      <password> ${{secrets.CALIPER_PAT}}</password>\n" \
          "    </server>\n" \
          "  </servers>\n" \
          "</settings>" > .m2/settings.xml

          # Configure HashiCorp GPG key and repository
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null

          # Configure Kubectl GPG key and repository
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg > /dev/null
          echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null

          # Install NodeSource PPA
          curl -s https://deb.nodesource.com/setup_18.x | sudo bash > /dev/null

          # Update repositories and install required packages
          sudo apt-get update > /dev/null
          sudo apt-get install -y openjdk-8-jdk nodejs terraform kubectl python3-pip jq > /dev/null

          # Install Azure-CLI
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash > /dev/null

          # Install cdktf
          sudo npm install --global cdktf-cli@0.16.3 > /dev/null

          # Clone repositories
          git clone https://github.com/juliangrewe-bosch/caliper.git
          git clone https://${{secrets.CALIPER_PRIVATE_REPOS_PAT}}@github.com/juliangrewe-bosch/carbynestack.git
          # temporär
          cd carbynestack
          git checkout -b cdktf-caliper origin/cdktf-caliper
          cd /home/caliper

          # Authenticate Terraform to Azure
          az login --service-principal -u ${{secrets.AZURE_SUBSCRIPTION_USERNAME}} -p ${{secrets.AZURE_SUBSCRIPTION_PASSWORD}} --tenant ${{secrets.AZURE_SUBSCRIPTION_TENANT}} --output none

          # Download Prometheus Operator bundle
          LATEST=\$(curl -s https://api.github.com/repos/prometheus-operator/prometheus-operator/releases/latest | jq -cr .tag_name)
          curl -o carbynestack/deployments/manifests/prometheus-operator-bundle.yaml -sL https://github.com/prometheus-operator/prometheus-operator/releases/download/\${LATEST}/bundle.yaml

          # Install dependencies and synthesize infrastructure using cdktf
          cd carbynestack/deployments || exit
          npm install > /dev/null
          cdktf get > /dev/null
          cdktf synth > /dev/null

          # Initialize and apply Terraform
          export TF_VAR_azureSubscriptionID=${{secrets.AZURE_SUBSCRIPTION_ID}}
          terraform -chdir=cdktf.out/stacks/private-aks-virtual-cloud/ init -input=false > /dev/null
          terraform -chdir=cdktf.out/stacks/private-aks-virtual-cloud/ apply -auto-approve -input=false > /dev/null

          # Get access credentials for private aks cluster
          az aks get-credentials --name apollo-private --resource-group caliper-rg
          az aks get-credentials --name starbuck-private --resource-group caliper-rg

          # Run load-tests
          cd /home/caliper/caliper || exit
          git checkout -b ephemeral-client origin/ephemeral-client
          export STARBUCK_FQDN=\$(kubectl get svc istio-ingressgateway -n istio-system -o jsonpath='{.status.loadBalancer.ingress[0].ip}').sslip.io
          kubectl config use-context apollo-private
          export APOLLO_FQDN=\$(kubectl get svc istio-ingressgateway -n istio-system -o jsonpath='{.status.loadBalancer.ingress[0].ip}').sslip.io
          chmod +x mvnw
          # klyshko benötigt Zeit bis Tuple bereit sind 
          # ./mvnw gatling:test

          # Generate report and export to Github Pages
          export PROMETHEUS_METRICS_PORT=30000
          export APOLLO_NODE_IP=\$(kubectl get node -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
          kubectl config use-context starbuck-private
          export STARBUCK_NODE_IP=\$(kubectl get node -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')

          #pip3 install -r scripts/generate_report_requirements.txt
          #python3 scripts/generate_report.py

          # Push report to Github Pages Repository
          # git config user.name ""
          # git config user.email ""
          # git add index.html # oder assets.* ?
          # git push https://${{secrets.CALIPER_PAT}}@github.com/juliangrewe-bosch/caliper.git
          EOF
      - name: Destroy Azure Resources
        run: echo "destroy"

  Deploy-Github-Pages:
    needs: Caliper-load-tests
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: |
            index.html
            assets/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
