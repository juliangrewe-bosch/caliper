name: 'Caliper-Load-Tests'

on:
  push:
  workflow_dispatch:

concurrency:
  group: "Caliper"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  caliper:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: caliper

      - uses: actions/checkout@v3
        with:
          repository: juliangrewe-bosch/carbynestack
          token: ${{secrets.CALIPER_PRIVATE_REPOS_PAT}}
          ref: cdktf-caliper
          path: carbynestack

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - run: npm install --global cdktf-cli@0.16.3

      - name: Provision Azure-VM
        id: provision-vm
        run: |
          npm install
          cdktf get
          cdktf synth
          terraform -chdir=cdktf.out/stacks/private-aks/ init -input=false
          terraform -chdir=cdktf.out/stacks/private-aks/ apply -auto-approve -input=false
        working-directory: carbynestack/deployments
        env:
          TF_VAR_adminPassword: ${{secrets.ADMIN_PASSWORD}}
          ARM_CLIENT_ID: ${{secrets.AZURE_SUBSCRIPTION_USERNAME}}
          ARM_CLIENT_SECRET: ${{secrets.AZURE_SUBSCRIPTION_PASSWORD}}
          ARM_TENANT_ID: ${{secrets.AZURE_SUBSCRIPTION_TENANT}}
          ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
        timeout-minutes: 20

      - name: Run load-tests
        id: load-tests
        run: |
          # Update package repositories and install necessary tools
          sudo apt-get update > /dev/null
          sudo apt-get install sshpass unzip -y

          # SSH into the remote server using sshpass and execute script
          sshpass -p ${{secrets.ADMIN_PASSWORD}} ssh -o "StrictHostKeyChecking no" \
          caliper@$(terraform \
          -chdir=../carbynestack/deployments/cdktf.out/stacks/private-aks/ output -raw caliper-vm-public-ip) \
          "export CALIPER_PAT=${{secrets.CALIPER_PAT}}; \
          export CALIPER_PRIVATE_REPOS_PAT=${{secrets.CALIPER_PRIVATE_REPOS_PAT}}; \
          export AZURE_SP_USERNAME=${{secrets.AZURE_SUBSCRIPTION_USERNAME}}; \
          export AZURE_SP_PASSWORD=${{secrets.AZURE_SUBSCRIPTION_PASSWORD}}; \
          export AZURE_SP_TENANT=${{secrets.AZURE_SUBSCRIPTION_TENANT}}; \
          export AZURE_SUBSCRIPTION_ID=${{secrets.AZURE_SUBSCRIPTION_ID}}; \
          bash -s" < scripts/run_caliper_load_tests.sh
        working-directory: caliper
        timeout-minutes: 60
        continue-on-error: true

      - name: Destroy Azure resources
        run: |
          terraform -chdir=../carbynestack/deployments/cdktf.out/stacks/private-aks/ destroy \ #-chdir mit $ACTIONS_WORKING_DIRECTORY
          -auto-approve -input=false

  deploy:
    needs: caliper
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force
        working-directory: mkdocs

        # TODO
        # add job Delete that tries to delete the caliper-rg resource group at the end
